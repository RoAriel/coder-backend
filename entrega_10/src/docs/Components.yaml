components:
  schemas:
    ProductDB:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado de mongo
        title:
          type: string
          description: Nombre del producto.
        description:
          type: string
          description: Descipcion del producto.
        code:
          type: string
          description: Codigo interno del producto.
        price:
          type: number
          description: Precio del producto.
        status:
          type: boolean
          description: Estado del producto (disponible/no disponible).
        stock:
          type: number
          description: Stock disponible.
        category:
          type: string
          description: Categoria a la cual pertenece el producto.
        thumbnail:
          type: array
          items: 
            type: string
          description: Url del producto.
        updatedAt:
          type: date
          description: Fecha de creacion/ Actualizacion del producto.
        owner:
          type: string
          description: Quien creo el producto.
    ProductRespuesta:
      type: object
      properties:
        product:
          type: object
          $ref: '#components/schemas/ProductDB'
    ProductsPaginated:
      type: object
      properties:
        payload:
          type: object
          properties:
            status:
              type: string
              description: resultado de la operacion
            payload:
              type: array
              items:
                $ref: '#components/schemas/ProuctBD'
              description: Productos en la db
            totalPages: 
              type: number
              description: Total de paginas de productos
            prevPage: 
              type: number
              description: Pagina previa
            nextPage:
              type: number
              description: Pagina siguiente
            page: 
              type: number
              description: Pagina actual
            hasPrevPage: 
              type: boolean
              description: Tiene pagina previa
            hasNextPage: 
              type: boolean
              description: Tiene pagina siguiente
            prevLink:  
              type: string
              description: Link a pagina previa
            nextLink: 
              type: string
              description: Link a pagina siguiente
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado de mongo
        pid:
          type: object
          $ref: '#components/schemas/ProductDB'
        quantity:
          type: number
          description: Cantidad de productos de este tipo en el carrito
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
  requestBodies:
    logUser:
      type: object
      properties:
        email:
          type: string
          description: Correo del usuario
        password:
          type: string
          description: Contrase√±a del usuario
    newProduct:
      type: object
      properties:
        title:
          type: string
          description: Nombre del producto.
        description:
          type: string
          description: Descipcion del producto.
        code:
          type: string
          description: Codigo interno del producto.
        price:
          type: number
          description: Precio del producto.
        status:
          type: boolean
          description: Estado del producto (disponible/no disponible).
        stock:
          type: number
          description: Stock disponible.
        category:
          type: string
          description: Categoria a la cual pertenece el producto.
        thumbnail:
          type: array
          items: 
            type: string
          description: Url del producto.


